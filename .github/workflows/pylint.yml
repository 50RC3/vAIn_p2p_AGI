name: Pylint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v4
    
    # Cache pip dependencies
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-


    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint pytest pytest-cov

    # Collect Python files
    - name: Collect Python files
      run: |
        find . -name "*.py" -not -path "./migrations/*" -not -path "./tests/*" > python_files.txt

    # Run tests with coverage
    - name: Run tests with coverage
      run: |
        pytest --cov=your_package_name --cov-report=html

    # Upload coverage report
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/

    # Analyze the code with pylint
    - name: Analyze the code with pylint
      run: |
        pylint $(cat python_files.txt) --rcfile=.pylintrc --output-format=json > pylint-report.json

    # Upload pylint report
    - name: Upload pylint report
      uses: actions/upload-artifact@v3
      with:
        name: pylint-report
        path: pylint-report.json

    # Set up results summary
    - name: Generate summary
      run: |
        echo "## Workflow Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Python version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- Tests executed with coverage" >> $GITHUB_STEP_SUMMARY
        echo "- Pylint report uploaded as artifact" >> $GITHUB_STEP_SUMMARY
        echo "- Coverage report available in artifacts" >> $GITHUB_STEP_SUMMARY

    # Enable debug logging
    - name: Enable debug logging
      run: |
        echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV
